package byItAcademy.Lesson_9.Lessons;

/*
Определить абстрактный класс Хищник. Создать классы дочерние Крокодил, Волк, Леопард.
В классе Хищник должен быть абстрактный метод способ охоты. Для крокодила, это прыгнуть на жертву, для волка-окружить жертву, для Леопарда догнать жертву.
В классе Хищник поля: среда обитания (джунгли, болото,лес и т.д.), максимальная скорость, окрас.
 1.1 Переопределить методы equals и hashcode для класса хищник
 1.2 Определить конструктор. Определить метод toString в абстрактном классе.
 1.3 Определить абстрактные методы (звуки, которые создаёт хищник, способ передвижения)
 1.4 Создать класс Крокодил с полями тип(аллигатор, простой крокодил),
 Леопард (определить поле с именем),
 Лев (поле с именем),
 змея (поле типом змеи).
 Унаследоваться от класса Хищник.
 1.5 Переопределить в каждом классе методы toString.
 1.6 Добавить хищников в массив(по пару штук в разнобой).
 Выбрать первую попавшиюся Змею,Льва, Крокодила из массива.
 Вызвать методы охоты, звуков для них
 */
public class Main {
    public static void main(String[] args) {
        Leon leon = new Leon("Пустыня", 220, "серый", "Сова");
        Leon leon1 = new Leon("Пустыня", 220, "серый", "Сова");
        System.out.println(leon.equals(leon1));
        Predator[] allPredators = Inizilators();

    }

    public static Predator[] Inizilators() {
        Predator[] predator = new Predator[8];
        predator[0] = new Shake("Водоем", 10, "белая", "обычная");
        predator[1] = new Crocodile("Болото", 15, "черный", "Большой");
        predator[2] = new Leon("Лес", 180, "черный", "Сокол");
        predator[3] = new Shake("Лес", 15, "черный", "Ядовитая");
        predator[4] = new Leon("Пустыня", 150, "серый", "Сова");
        predator[5] = new Crocodile("Пустыня", 30, "зеленный", "Мелкий");
        predator[6] = new Leon("Лес", 150, "черный", "Симба");
        predator[7] = new Shake("Дом", 20, "оранжевая", "Ядовитая");
        return predator;
    }
}
